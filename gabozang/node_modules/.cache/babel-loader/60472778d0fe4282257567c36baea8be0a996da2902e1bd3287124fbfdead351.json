{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Create, Update, Delete\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Name:\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Last Name:\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _withDirectives(_createElementVNode(\"select\", {\n    size: \"5\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selected = $event)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.names, name => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: name\n    }, _toDisplayString(name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selected]]), _hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.first = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.first]]), _hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.last = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.last]]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.mcreate && $options.mcreate(...args))\n  }, \"Create\"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.mupdate && $options.mupdate(...args))\n  }, \"Update\"), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.mdelete && $options.mdelete(...args))\n  }, \"Delete\")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACEA,oBAA+B,YAA3B,wBAAsB;gCAK1BA,oBAAoB,eAAb,OAAK;gCACZA,oBAAyB,eAAlB,YAAU;;EAEZC,KAAK,EAAC;AAAS;;6DARpBC,UAA+B,kBAC/BF,oBAES;IAFDG,IAAI,EAAC,GAAG;+DAAUC,cAAQ;yBAChCC,oBAA6DC,6BAAtCF,WAAK,EAAbG,IAAI;yBAAnBF,oBAA6D;MAA9BG,GAAG,EAAED;IAAI,oBAAKA,IAAI;2EADzBH,cAAQ,KAIlCK,UAAoB,sCAAuB;+DAAPL,WAAK;iDAALA,WAAK,KACzCM,UAAyB,sCAAsB;+DAANN,UAAI;iDAAJA,UAAI,KAE7CJ,oBAIM,OAJNW,UAIM,GAHJX,oBAAwC;IAA/BY,OAAK,yCAAEC,6CAAO;KAAE,QAAM,GAC/Bb,oBAAwC;IAA/BY,OAAK,yCAAEC,6CAAO;KAAE,QAAM,GAC/Bb,oBAAwC;IAA/BY,OAAK,yCAAEC,6CAAO;KAAE,QAAM","names":["_createElementVNode","class","_hoisted_1","size","$data","_createElementBlock","_Fragment","name","key","_hoisted_2","_hoisted_3","_hoisted_4","onClick","$options"],"sourceRoot":"","sources":["/Users/shinkiho/ExampleProjeck/vuex3_example.onda2me/src/views/example/05CRUD.vue"],"sourcesContent":["<template>\n  <h1>Create, Update, Delete</h1>  \n  <select size=\"5\" v-model=\"selected\">\n    <option v-for=\"name in names\" :key=\"name\">{{ name }}</option>\n  </select>\n\n  <label>Name:</label><input v-model=\"first\">\n  <label>Last Name:</label><input v-model=\"last\">\n\n  <div class=\"buttons\">\n    <button @click=\"mcreate\">Create</button>\n    <button @click=\"mupdate\">Update</button>\n    <button @click=\"mdelete\">Delete</button>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  data() {\n    return {\n      names: ['Gildong, Hong', 'Jackie, Chan', 'Bruce, Lee'],\n      selected: '',\n      first: '',\n      last: ''\n    }\n  },\n  watch: {\n    selected(name) {\n      [this.first, this.last] = name.split(', ')\n    }\n  },\n  methods: {\n    mcreate() {\n      console.log(\"create\");\n      if(this.hasValidInput()) {\n        // console.log(this.first + \", \" + this.last)\n        const fullName = this.first +\", \" + this.last\n        console.log(this.first + \", \" + this.last +\"==\" + fullName)\n\n        if(!this.names.includes(fullName)) {\n          this.names.push(fullName)\n          this.first = this.last = ''\n        }\n      }      \n    },\n    mupdate() {\n      //console.log(\"update\");\n      if(this.hasValidInput() && this.selected) {\n        const i = this.names.indexOf(this.selected)\n        this.names[i] = this.selected = this.first +\", \" + this.last\n      }\n    },\n    mdelete() {\n      //console.log(\"delete.selected : \" + this.selected)\n\n      if(this.selected) {\n        const i = this.names.indexOf(this.selected)\n        this.names.splice(i, 1)\n        this.selected = this.first = this.last = ''\n      }\n    },\n    hasValidInput() {\n      return this.first.trim() && this.last.trim();\n    }\n\n  }\n}\n</script>\n<style>\n .searchBox {\n    padding: 10px 0px; /*\n    width: 100%;\n    background-color: #eee; */\n  }\n  input {\n    display: block;\n    margin-bottom: 10px;\n  }\n\n  select {\n    float: left;\n    margin: 0 1em 1em 0;\n    width: 14em;\n  }\n\n  .buttons {\n    clear: both;\n  }\n\n  button + button {\n    margin-left: 5px;\n  }  \n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}