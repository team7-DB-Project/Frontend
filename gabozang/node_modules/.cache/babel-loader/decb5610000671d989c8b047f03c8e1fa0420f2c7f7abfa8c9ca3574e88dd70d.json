{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, vModelCheckbox as _vModelCheckbox, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Input Form\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Text Input\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Checkbox\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  for: \"checkbox\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Multi Checkbox\", -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"apple\"\n}, \"Apple\", -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"grape\"\n}, \"Grape\", -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"melon\"\n}, \"Melon\", -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Multi Checkbox : v-for\", -1 /* HOISTED */);\nconst _hoisted_13 = {\n  key: 0\n};\nconst _hoisted_14 = [\"value\"];\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.text = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.text]]), _createTextVNode(\" \" + _toDisplayString($data.text) + \" \", 1 /* TEXT */), _hoisted_3, _hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    id: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.checked = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.checked]]), _createElementVNode(\"label\", _hoisted_5, \"Checked: \" + _toDisplayString($data.checked), 1 /* TEXT */), _hoisted_6, _hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    value: \"Apple\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.checkedNames = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.checkedNames]]), _hoisted_8, _createTextVNode(\"  \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    value: \"Grape\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.checkedNames = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.checkedNames]]), _hoisted_9, _createTextVNode(\"  \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    value: \"Melon\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.checkedNames = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.checkedNames]]), _hoisted_10, _hoisted_11, _hoisted_12, $data.list.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.list, (item, index) => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: index\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      value: item,\n      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.checkedNames = $event)\n    }, null, 8 /* PROPS */, _hoisted_14), [[_vModelCheckbox, $data.checkedNames]]), _createTextVNode(_toDisplayString(index + 1) + \".\" + _toDisplayString(item) + \" \", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"p\", null, [_createTextVNode(\"Checked names: \"), _createElementVNode(\"pre\", null, _toDisplayString($data.checkedNames), 1 /* TEXT */)]), _hoisted_15], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACEA,oBAAmB,YAAf,YAAU;gCAEdA,oBAAmB,YAAf,YAAU;gCAEdA,oBAAK;gCAELA,oBAAiB,YAAb,UAAQ;;EAELC,GAAG,EAAC;AAAU;gCACrBD,oBAAK;gCAELA,oBAAuB,YAAnB,gBAAc;gCAElBA,oBAAgC;EAAzBC,GAAG,EAAC;AAAO,GAAC,OAAK;gCAExBD,oBAAgC;EAAzBC,GAAG,EAAC;AAAO,GAAC,OAAK;iCAExBD,oBAAgC;EAAzBC,GAAG,EAAC;AAAO,GAAC,OAAK;iCACxBD,oBAAK;iCAELA,oBAA+B,YAA3B,wBAAsB;;;;;iCAK1BA,oBAAK;;;6DAzBLE,UAAmB,EAEnBC,UAAmB,kBACnBH,oBAAmC;IAA5BI,IAAI,EAAC,MAAM;+DAAUC,UAAI;iDAAJA,UAAI,sBAAG,GAAC,oBAAGA,UAAI,IAAG,GAC9C,2BAAK,EAELC,UAAiB,kBACjBN,oBAAuD;IAAhDI,IAAI,EAAC,UAAU;IAACG,EAAE,EAAC,UAAU;+DAAUF,aAAO;qDAAPA,aAAO,KACrDL,oBAAoD,SAApDQ,UAAoD,EAA9B,WAAS,oBAAGH,aAAO,kBACzCI,UAAK,EAELC,UAAuB,kBACvBV,oBAA4D;IAArDI,IAAI,EAAC,UAAU;IAACO,KAAK,EAAC,OAAO;+DAAUN,kBAAY;qDAAZA,kBAAY,KAC1DO,UAAgC,uBAChC,uCAA4D;IAArDR,IAAI,EAAC,UAAU;IAACO,KAAK,EAAC,OAAO;+DAAUN,kBAAY;qDAAZA,kBAAY,KAC1DQ,UAAgC,uBAChC,uCAA4D;IAArDT,IAAI,EAAC,UAAU;IAACO,KAAK,EAAC,OAAO;+DAAUN,kBAAY;qDAAZA,kBAAY,KAC1DS,WAAgC,EAChCC,WAAK,EAELC,WAA+B,EACpBX,UAAI,CAACY,MAAM,kBAAtBC,oBAEM,wCADJA,oBAAoJC,6BAAtHd,UAAI,GAApBe,IAAI,EAAEC,KAAK;yBAAzBH,oBAAoJ;MAA/GI,GAAG,EAAED;IAAK,oBAAIrB,oBAA4D;MAArDI,IAAI,EAAC,UAAU;MAAEO,KAAK,EAAES,IAAI;iEAAWf,kBAAY;6DAAZA,kBAAY,uCAAKgB,KAAK,QAAK,GAAC,oBAAGD,IAAI,IAAG,GAAM;yEAE/IpB,oBAAmD,6BAAhD,iBAAe,uBAA6B,8BAArBK,kBAAY,oBACtCkB,WAAK","names":["_createElementVNode","for","_hoisted_1","_hoisted_2","type","$data","_hoisted_4","id","_hoisted_5","_hoisted_6","_hoisted_7","value","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","length","_createElementBlock","_Fragment","item","index","key","_hoisted_15"],"sourceRoot":"","sources":["/Users/shinkiho/ExampleProjeck/vuex3_example.onda2me/src/views/example/01InputForm.vue"],"sourcesContent":["<template>\n  <h1>Input Form</h1> \n  \n  <h2>Text Input</h2>\n  <input type=\"text\" v-model=\"text\" > {{ text }}\n  <hr/>\n\n  <h2>Checkbox</h2>\n  <input type=\"checkbox\" id=\"checkbox\" v-model=\"checked\">\n  <label for=\"checkbox\">Checked: {{ checked }}</label>\n  <hr/>\n  \n  <h2>Multi Checkbox</h2>\n  <input type=\"checkbox\" value=\"Apple\" v-model=\"checkedNames\">\n  <label for=\"apple\">Apple</label>&nbsp;\n  <input type=\"checkbox\" value=\"Grape\" v-model=\"checkedNames\">\n  <label for=\"grape\">Grape</label>&nbsp;\n  <input type=\"checkbox\" value=\"Melon\" v-model=\"checkedNames\">\n  <label for=\"melon\">Melon</label>\n  <hr/>\n  \n  <h2>Multi Checkbox : v-for</h2>\n  <div v-if=\"list.length\">\n    <span v-for=\"(item, index) of list\" :key=\"index\" > <input type=\"checkbox\" :value=\"item\" v-model=\"checkedNames\">{{ index+1 }}.{{ item }}&nbsp;</span>\n  </div>\n  <p>Checked names: <pre>{{ checkedNames }}</pre></p>\n  <hr/>\n\n  \n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        text: 'Edit me',\n        checked: true,\n        list: ['Apple', 'Grape', 'Melon'], \n        checkedNames: ['Grape', 'Melon'],\n      }\n    }\n  }\n</script>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}