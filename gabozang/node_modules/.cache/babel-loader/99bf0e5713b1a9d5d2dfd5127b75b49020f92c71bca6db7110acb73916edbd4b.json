{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Click Event\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.clickBtn('One'))\n  }, \"Click One\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = $event => $options.clickBtn('Two'))\n  }, \"Click Two\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $options.clickBtn('Three'))\n  }, \"Click Three\")]), _createElementVNode(\"p\", null, \"Clicked \" + _toDisplayString($data.clickNum) + \" Button \", 1 /* TEXT */), _createElementVNode(\"p\", null, \"Click \" + _toDisplayString($data.clickCount) + \" times. \", 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCACEA,oBAAoB,YAAhB,aAAW;;EACVC,KAAK,EAAC;AAAS;;6DADpBC,UAAoB,EACpBF,oBAIM,OAJNG,UAIM,GAHJH,oBAAmD;IAA1CI,OAAK,sCAAEC,iBAAQ;KAAS,WAAS,GAC1CL,oBAAmD;IAA1CI,OAAK,sCAAEC,iBAAQ;KAAS,WAAS,GAC1CL,oBAAuD;IAA9CI,OAAK,sCAAEC,iBAAQ;KAAW,aAAW,KAEhDL,oBAAqC,WAAlC,UAAQ,oBAAGM,cAAQ,IAAG,UAAQ,iBACjCN,oBAAqC,WAAlC,QAAM,oBAAGM,gBAAU,IAAG,UAAQ","names":["_createElementVNode","class","_hoisted_1","_hoisted_2","onClick","$options","$data"],"sourceRoot":"","sources":["/Users/shinkiho/ExampleProjeck/vuex3_example.onda2me/src/views/example/Basic02Click.vue"],"sourcesContent":["<template>\n  <h1>Click Event</h1>  \n  <div class=\"buttons\">\n    <button @click=\"clickBtn('One')\">Click One</button>\n    <button @click=\"clickBtn('Two')\">Click Two</button>\n    <button @click=\"clickBtn('Three')\">Click Three</button>\n  </div>\n  <p>Clicked {{ clickNum }} Button </p>\n  <p>Click {{ clickCount }} times. </p>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      clickNum: '',\n      clickCount: 0\n    }\n  },\n  methods: {\n    clickBtn: function(num) {\n      this.clickNum = num\n      this.clickCount++\n    }\n  }\n}\n</script>\n<style>  \n  .buttons {\n    clear: both;\n    height: 50px;\n  }\n  button{\n    padding: 10px;\n    font-size: 16px;\n    font-weight: 500;\n  } \n  button + button {\n    margin-left: 10px;\n  }   \n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}